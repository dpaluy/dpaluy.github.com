<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: rubyonrails | Paluy on Miscellaneous]]></title>
  <link href="http://dpaluy.github.io/blog/tags/rubyonrails/atom.xml" rel="self"/>
  <link href="http://dpaluy.github.io/"/>
  <updated>2013-09-11T23:21:53-04:00</updated>
  <id>http://dpaluy.github.io/</id>
  <author>
    <name><![CDATA[David Paluy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails code quality tools]]></title>
    <link href="http://dpaluy.github.io/blog/2013/09/09/rails-code-quality-tools/"/>
    <updated>2013-09-09T14:03:00-04:00</updated>
    <id>http://dpaluy.github.io/blog/2013/09/09/rails-code-quality-tools</id>
    <content type="html"><![CDATA[<p><em>The only valid measurement of code quality: WTFs/minute</em> <br /><a href="http://www.osnews.com/story/19266/WTFs_m" target="_blank">source</a></p>

<p>I would like to cover code quality tools I use while developing Rails applications.</p>

<p>Of course you should try <a href="https://codeclimate.com/" target="_blank">CodeClimate</a> service to monitor your project, but...</p>

<h2>Let`s overview some open source solutions:</h2>

<h3>1. <a href="https://github.com/railsbp/rails_best_practices">Rails Best Practises</a> - RBP</h3>

<p>It's a static code analysis tool that checks the quality of rails code. It can be <a href="https://github.com/railsbp/rails_best_practices#customize-configuration" target="_blank">customized</a> for your needs and even add your own <a href="https://github.com/railsbp/rails_best_practices/wiki/How-to-write-your-own-check-list" target="_blank">checklist</a></p>

<p>I prefer to add RBP analysis to CI tasks, as following:</p>

<p><code>
rails_best_practices -f html --template config/my_rails_best_practices.html.erb .
</code></p>

<p>while I use my custom RBP template report <code>config/my_rails_best_practices.html.erb</code>. The RBP report is a part of my CI artifacts.</p>

<p><strong>Alternative 1</strong>: <a href="https://github.com/roodi/roodi" target="_blank">ROODI</a> - Ruby Object Oriented Design Inferometer.
Usage: <code>roodi -config=config/roodi.yml "app/**/*.rb" "lib/**/*.rb" &gt; roodi_report.txt</code></p>

<p><strong>Alternative 2</strong>: <a href="https://github.com/bbatsov/rubocop" target="_blank">Rubocop</a></p>

<p><strong>Alternative 3</strong>: <a href="https://github.com/square/cane" target="_blank">Cane</a></p>

<p><strong>Alternative 4</strong>: <a href="http://rubydoc.info/github/YorickPeterse/ruby-lint/
" target="_blank">Ruby Lint</a></p>

<h3>2. Code Coverage - <a href="https://github.com/colszowka/simplecov" target="_blank">SimpleCov</a></h3>

<p>Add the following code to <code>spec_helper.rb</code></p>

<p>```ruby
require 'rubygems'</p>

<p>if ENV["COVERAGE"]
  require 'simplecov'
  SimpleCov.start 'rails'
end</p>

<h1>...</h1>

<p>```</p>

<p><strong>Note</strong>: Add <code>export COVERAGE=true</code> before you run your tests.</p>

<h3>3. <a href="https://github.com/bbatsov/ruby-style-guide" target="_blank">Ruby Style Guide</a>, <a href="https://github.com/bbatsov/rails-style-guide" target="_blank">Rails Style Guide</a> and <a href="https://github.com/airbnb/javascript" target="_blank">JavaScript Guide</a></h3>

<p>Your team should apply those guides or define your own. You should also check those <a href="https://github.com/styleguide/" target="_blank">Github guides</a>.</p>

<h3>4. Rails Security Scanner - <a href="http://brakemanscanner.org/" target="_blank">Brakeman</a></h3>

<h3>Note:</h3>

<p>Read this <a href="http://blog.codeclimate.com/blog/2013/08/07/deciphering-ruby-code-metrics/">blog post</a> by CodeClimate</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec - less known features]]></title>
    <link href="http://dpaluy.github.io/blog/2013/09/07/rspec-less-known-features/"/>
    <updated>2013-09-07T03:41:00-04:00</updated>
    <id>http://dpaluy.github.io/blog/2013/09/07/rspec-less-known-features</id>
    <content type="html"><![CDATA[<p>I would like to summarize some of less known RSpec feature I use during my development.</p>

<h3>Execute specific test from command line</h3>

<p>```ruby</p>

<h1>spec/controllers/user_controller_spec.rb</h1>

<p>require 'spec_helper'</p>

<p>describe UsersController do</p>

<p>  before (:each) do</p>

<pre><code>@user = FactoryGirl.create(:user)
sign_in @user
</code></pre>

<p>  end</p>

<p>  describe "GET 'show'" do</p>

<pre><code>it "should be successful" do
  get :show, id: @user.id
  response.should be_success
end

it "should find the right user" do
  get :show, id: @user.id
  assigns(:user).should == @user
end
</code></pre>

<p>  end</p>

<p>end</p>

<p>```</p>

<p>Suppose you want to test only the test at line <em>#17</em>. You can append the line number to file pathrun:</p>

<p><code>
rspec spec/controllers/user_controller_spec.rb:17
</code></p>

<p>It will run only the test inside the scoped line. The same can be used with <em>describe</em>/<em>context</em>.</p>

<h3>Temporary pending test</h3>

<p>Suppose you need temporary disable a test at line <em>#8</em>. You can add <strong>x</strong> before <strong>it</strong> and the test is <strong>pending</strong> now.</p>

<p>```ruby
describe "GET 'show'" do</p>

<p>  it "should be successful" do</p>

<pre><code>get :show, id: @user.id
response.should be_success
</code></pre>

<p>  end</p>

<p>  # THIS TEST IS PENDING NOW
  xit "should find the right user" do</p>

<pre><code>get :show, id: @user.id
assigns(:user).should == @user
</code></pre>

<p>  end</p>

<p>end</p>

<p>```</p>

<h3>Focus on specific test</h3>

<p>Add a tag to the selected test:</p>

<p>```ruby
describe "GET 'show'" do</p>

<p>  it "should be successful", focus: true do</p>

<pre><code>get :show, id: @user.id
response.should be_success
</code></pre>

<p>  end</p>

<p>  it "should find the right user" do</p>

<pre><code>get :show, id: @user.id
assigns(:user).should == @user
</code></pre>

<p>  end</p>

<p>end</p>

<p>```</p>

<p>Then, run rspec as following: <code>rspec -t focus</code></p>

<h3>Rails.logger stub</h3>

<p>If you need to stub Rails logger, you should do the following:</p>

<p>```ruby</p>

<h1>Expecting to receive Rails.logger.debug some_message</h1>

<p>let(:logger_mock) { double("Rails.logger").as_null_object }
Rails.stub_chain(:logger, :debug).and_return(logger_mock)</p>

<h1>your test goes here</h1>

<h1>...</h1>

<p>#</p>

<h1>Don't forget to unstub the logger at the end of test!</h1>

<p>Rails.unstub(:logger)
```</p>

<p>More about <a href="https://www.relishapp.com/rspec/rspec-mocks/v/2-0/docs/stubs/stub-a-chain-of-methods">stub_chain</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kata RubyUnderground TLV]]></title>
    <link href="http://dpaluy.github.io/blog/2013/08/24/kata-rubyunderground-tlv/"/>
    <updated>2013-08-24T03:10:00-04:00</updated>
    <id>http://dpaluy.github.io/blog/2013/08/24/kata-rubyunderground-tlv</id>
    <content type="html"><![CDATA[<p>We had a different <a href="http://www.meetup.com/IsraelRubyUnderground/events/116715192/" target="_blank">Meetup event</a>.
Me, <a href="https://twitter.com/arikfr" target="_blank">@arikfr</a> and <a href="https://twitter.com/torkale" target="_blank">@torkale</a> were mentoring Kata groups. None of us had a previous experience doing Kata but we all really liked it.</p>

<p><img src="/images/RubyUndergroundMeetup_Kata_David_Paluy.jpg" alt="RubyUnderground Meetup Kata David Paluy" /></p>

<p><strong>Code Kata</strong> is programming exercise that concentrated not on the final solution, but discussing and implementing the possible ways to solve it.</p>

<p>IMHO, every team should do a 1 hour kata periodically.</p>

<h3>Kata examples:</h3>

<ul>
<li><a href="https://www.youtube.com/watch?v=983zk0eqYLY" target="_blank">Roman Numerals Kata</a></li>
<li><a href="http://vimeo.com/7762511" target="_blank">Prime Factors Kata</a></li>
<li><a href="http://vimeo.com/7961506" target="_blank">String Calculator Kata</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SteelCity Ruby - My First International Ruby conference]]></title>
    <link href="http://dpaluy.github.io/blog/2013/08/20/steelcity-ruby-my-first-international-ruby-conference/"/>
    <updated>2013-08-20T22:54:00-04:00</updated>
    <id>http://dpaluy.github.io/blog/2013/08/20/steelcity-ruby-my-first-international-ruby-conference</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<p>You have to visit at least one Ruby conference in USA! Check this <a href="#summary">summary</a></p>

<h2>SteelCity Ruby</h2>

<p>At the beginning of this year (2013) I decided that I have to participate in at least one international Ruby conference.
I already participated in Development conferences in Europe and even did several talks. But I have never been in USA Ruby conference yet.</p>

<p>Some one tweeted about <a href="http://steelcityruby.org/">SteelCity Ruby</a> conference and I decided to register immediately.
I found amazing appartment via <a href="https://www.airbnb.com/tell-a-friend?airef=2idrtz00414zz5">AirBnB</a> just near the venue for a half price of a room in hotel.</p>

<p><img src="/images/PIT_AirBnB.jpg" alt="View from my appartment" /></p>

<p>Pittsburgh is a very nice city with amazing Ruby community. They have a pub inside a church (The Church Brew Works)</p>

<p><img src="/images/PIT_The_Church_Brew_Works.jpg" alt="The Church Brew Works" /></p>

<p>and Pittsburgh Sandwich with French fries</p>

<p><img src="/images/PIT_pittsburgh_sandwich.jpg" alt="Pittsburgh Sandwich" /></p>

<p>But let's go back to the Ruby. Did you know that <a href="http://www.steveklabnik.com/" target="_blank">Steve Klabnik</a> lived in Pittsburgh till last year?</p>

<p><img src="/images/PIT_Steve_Klabnik_David_Paluy.jpg" alt="Ruby Friends - Steve Klabnik with David Paluy" /></p>

<p>I really like the "community feel" of this event. The organizers did amazing job! It's all done by local volunteers with help of sponsors.</p>

<p>I was introduced to other at the beginning of first day, when the conference moderator asked, who did more than 10,000 miles to arrive to that event.</p>

<p>I met a lot of great developers and had some #RubyFriends <a href="https://twitter.com/robbkidd/status/368384756217413633" target="_blank">pictures</a>. BTW, if you still don't have a <a href="http://rubyfriends.com/" target="_blank">RubyFriends picture</a>, go to a local meetup and do at least one!</p>

<p>I had an interesting talk with founder of <a href="https://www.gittip.com/" target="_blank">Gittip</a> Chad Whitacre. He founded amazing product to support Open Source community.</p>

<p><img src="/images/PIT_Chad_Whitacre_David_Paluy.jpg" alt="Ruby Friends - Chad Whitacre with David Paluy" /></p>

<p>I also invited <a href="http://about.avdi.org/">Avdi Grimm</a> to come to Israel and give a talk in one of our events.</p>

<p><img src="/images/PIT_Avdi_Grimm_David_Paluy.jpg" alt="Ruby Friends - Avdi Grimm with David Paluy" /></p>

<h2>Summary</h2>

<p>More conference pictures and other info can be found <a name="summary" href="http://eventifier.co/event/scrc13/photos" target="_blank">here</a>.</p>

<p>You can find the confernece videos <a href="http://steelcityruby.confbots.com/" target="_blank">here</a>. But I would like to advise you to check at least those talks:</p>

<ul>
<li><a href="https://twitter.com/avdi" target="_balnk">@avdi</a>'s talk about <a href="http://steelcityruby.confbots.com/video/73590687" target="_blank">metaprogramming, coding for fun, and the joy of sharing</a></li>
<li><a href="http://steelcityruby.confbots.com/video/72762735" target="_blank">Deliberate Git</a> by Stephen Ball with <a href="https://speakerdeck.com/sdball/deliberate-git" target="_blank">slides</a> and <a href="http://rakeroutes.com/blog/deliberate-git" target="_blank">text version</a> or his presentation.</li>
<li><a href="http://steelcityruby.confbots.com/video/72791610" target="_blank">DevOps for the Ruby Soul</a> by John Downey  (<a href="https://speakerdeck.com/jtdowney/devops-for-the-rubyist-soul-at-steel-city-ruby-2013" target="_blank">slides</a>)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Process Information]]></title>
    <link href="http://dpaluy.github.io/blog/2013/04/29/process-information/"/>
    <updated>2013-04-29T23:09:00-04:00</updated>
    <id>http://dpaluy.github.io/blog/2013/04/29/process-information</id>
    <content type="html"><![CDATA[<p>I found it very useful to see my application process info on an admin page, as following:</p>

<p><img src="/images/process_info.png" title="Process Info" ></p>

<p>You can do it inside your Rails app.</p>

<p>Inside your <em>controller/admin_controller.rb</em>:</p>

<p><code>``ruby
def index
  @processes =</code>ps -g #{Process.getsid($$)} -o pid,wchan,%cpu,%mem,rss,vsz,command`.strip.split("\n")
  @proc_headers = @processes.shift.split(/\s+/)
  @processes.map! { |line| line.strip.split(/\s+/, @proc_headers.size) }.</p>

<pre><code>  reject! { |line| line.last.start_with?('ps -g') }
</code></pre>

<p>end
```</p>

<p>and add the following to your <em>view/admin/index.html.erb</em></p>

<p>```erb</p>

<table>
  <thead>
    <tr>
    <% @proc_headers.each do |th| %>
      <th><%= th %></th>
    <% end %>
    </tr>
  </thead>
  <tbody>
    <% @processes.each do |line| %>
      <tr>
      <% line.each do |td| %>
        <td><%= td %></td>
      <% end %>
      </tr>
    <% end %>
  </tbody>
</table>


<p>```</p>

<p>I would like to thank <a href="https://twitter.com/romanbsd">@romanbsd</a> for this source.</p>
]]></content>
  </entry>
  
</feed>
